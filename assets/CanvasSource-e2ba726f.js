import{e as _,u as w,O as g,T as o,C as B,a as v,D,E as T}from"./CanvasTest-18dd6528.js";function C(s,t,e,r){const a=e._source,n=e.layout,i=n.orig,h=n.trim,u=a.width,c=a.height,d=u*i.width,l=c*i.height;if(h){const y=u*h.width,f=c*h.height;s[0]=h.x*u-t._x*d-r,s[1]=s[0]+y,s[2]=h.y*c-t._y*l-r,s[3]=s[2]+f}else s[0]=-t._x*d-r,s[1]=s[0]+d,s[2]=-t._y*l-r,s[3]=s[2]+l}class S{constructor(t){this.renderPipeId="sprite",this.owner=_,this.uid=w("spriteView"),this.batched=!0,this._didUpdate=!1,this._bounds=[0,1,0,0],this._sourceBounds=[0,1,0,0],this._boundsDirty=!0,this._sourceBoundsDirty=!0,this.roundPixels=0,this.anchor=new g(this,t.layout.defaultAnchor?.x||0,t.layout.defaultAnchor?.y||0),this.texture=t}set texture(t){t||(t=o.EMPTY),this._texture!==t&&(this._texture=t,this.onUpdate())}get texture(){return this._texture}get bounds(){return this._boundsDirty&&(this._updateBounds(),this._boundsDirty=!1),this._bounds}get sourceBounds(){return this._sourceBoundsDirty&&(this._updateSourceBounds(),this._sourceBoundsDirty=!1),this._sourceBounds}containsPoint(t){const e=this.sourceBounds;return t.x>=e[0]&&t.x<=e[1]&&t.y>=e[2]&&t.y<=e[3]}addBounds(t){const e=this._texture._layout.trim?this.sourceBounds:this.bounds;t.addFrame(e[0],e[2],e[1],e[3])}onUpdate(){this._didUpdate=!0,this._sourceBoundsDirty=this._boundsDirty=!0,this.owner.onViewUpdate()}_updateBounds(){C(this._bounds,this.anchor,this._texture,0)}_updateSourceBounds(){const t=this.anchor,e=this._texture,r=e._source,n=e.layout.orig,i=this._sourceBounds,h=r.width*n.width,u=r.height*n.height;i[0]=-t._x*h,i[1]=i[0]+h,i[2]=-t._y*u,i[3]=i[2]+u}destroy(t=!1){if(this.anchor=null,typeof t=="boolean"?t:t?.texture){const r=typeof t=="boolean"?t:t?.textureSource;this._texture.destroy(r)}this._texture=null,this._bounds=null,this._sourceBounds=null}}class x extends B{static from(t,e=!1){return t instanceof o?new x(t):new x(o.from(t,e))}constructor(t=o.EMPTY){t instanceof o&&(t={texture:t});const{texture:e,...r}=t;super({view:new S(e??o.EMPTY),label:"Sprite",...r}),this.allowChildren=!1}get anchor(){return this.view.anchor}set anchor(t){this.view.anchor.x=t.x,this.view.anchor.y=t.y}get texture(){return this.view.texture}set texture(t){this.view.texture=t}get roundPixels(){return!!this.view.roundPixels}set roundPixels(t){this.view.roundPixels=t?1:0}}class m extends v{constructor(t){t.resource||(t.resource=D.get().createCanvas()),t.width||(t.width=t.resource.width,t.autoDensity||(t.width/=t.resolution)),t.height||(t.height=t.resource.height,t.autoDensity||(t.height/=t.resolution)),super(t),this.uploadMethodId="image",this.autoDensity=t.autoDensity;const e=t.resource;(this.pixelWidth!==e.width||this.pixelWidth!==e.height)&&this.resizeCanvas()}resizeCanvas(){this.autoDensity&&(this.resource.style.width=`${this.width}px`,this.resource.style.height=`${this.height}px`),this.resource.width=this.pixelWidth,this.resource.height=this.pixelHeight}resize(t=this.width,e=this.height,r=this._resolution){super.resize(t,e,r),this.resizeCanvas()}static test(t){return globalThis.HTMLCanvasElement&&t instanceof HTMLCanvasElement||globalThis.OffscreenCanvas&&t instanceof OffscreenCanvas}}m.extension=T.TextureSource;export{m as C,x as S,C as u};
